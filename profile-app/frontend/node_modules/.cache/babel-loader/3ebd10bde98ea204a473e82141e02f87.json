{"ast":null,"code":"import axios from 'axios';\nconst service = axios.create({\n  withCredentials: true,\n  baseURL\n});\nconst baseURL = 'hhtp://localhost:';\nconst AUTH_SERVICE = {\n  test: async () => {\n    return await service.get('/');\n  },\n  signup: async user => {\n    return await service.post('/signup', user);\n  },\n  login: async user => {\n    return await service.post('/login', user);\n  },\n  logOut: async () => {\n    return await service.post('/logout');\n  },\n  loggedIn: async () => {\n    return await service.get('/loggedin');\n  },\n  upload: async image => {\n    return await service.post('/upload', image);\n  },\n  edit: async () => {\n    return await service.post('/edit');\n  }\n};\nexport default AUTH_SERVICE;","map":{"version":3,"sources":["/Users/eliher/Desktop/atrasado/lab-profile-app/profile-app/frontend/src/services/index.js"],"names":["axios","service","create","withCredentials","baseURL","AUTH_SERVICE","test","get","signup","user","post","login","logOut","loggedIn","upload","image","edit"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA;AAAzB,CAAb,CAAhB;AACA,MAAMA,OAAO,GAAG,mBAAhB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,YAAY;AAChB,WAAO,MAAML,OAAO,CAACM,GAAR,CAAY,GAAZ,CAAb;AACD,GAHkB;AAInBC,EAAAA,MAAM,EAAE,MAAOC,IAAP,IAAgB;AACtB,WAAO,MAAMR,OAAO,CAACS,IAAR,CAAa,SAAb,EAAwBD,IAAxB,CAAb;AACD,GANkB;AAOnBE,EAAAA,KAAK,EAAE,MAAOF,IAAP,IAAgB;AACrB,WAAO,MAAMR,OAAO,CAACS,IAAR,CAAa,QAAb,EAAuBD,IAAvB,CAAb;AACD,GATkB;AAUnBG,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,MAAMX,OAAO,CAACS,IAAR,CAAa,SAAb,CAAb;AACD,GAZkB;AAanBG,EAAAA,QAAQ,EAAE,YAAY;AACpB,WAAO,MAAMZ,OAAO,CAACM,GAAR,CAAY,WAAZ,CAAb;AACD,GAfkB;AAgBnBO,EAAAA,MAAM,EAAE,MAAMC,KAAN,IAAe;AACrB,WAAO,MAAMd,OAAO,CAACS,IAAR,CAAa,SAAb,EAAwBK,KAAxB,CAAb;AACD,GAlBkB;AAmBnBC,EAAAA,IAAI,EAAE,YAAY;AAChB,WAAO,MAAMf,OAAO,CAACS,IAAR,CAAa,OAAb,CAAb;AACD;AArBkB,CAArB;AAwBA,eAAeL,YAAf","sourcesContent":["import axios from 'axios'\n\nconst service = axios.create({ withCredentials: true, baseURL });\nconst baseURL = 'hhtp://localhost:'\nconst AUTH_SERVICE = {\n  test: async () => {\n    return await service.get('/');\n  },\n  signup: async (user) => {\n    return await service.post('/signup', user);\n  },\n  login: async (user) => {\n    return await service.post('/login', user);\n  },\n  logOut: async () => {\n    return await service.post('/logout');\n  },\n  loggedIn: async () => {\n    return await service.get('/loggedin')\n  },\n  upload: async image => {\n    return await service.post('/upload', image)\n  },\n  edit: async () => {\n    return await service.post('/edit')\n  }\n};\n\nexport default AUTH_SERVICE;\n"]},"metadata":{},"sourceType":"module"}